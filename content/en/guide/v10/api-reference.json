{"meta":{"title":"API Reference","description":"Learn more about all exported functions of the Preact module","toc":[{"text":"API Reference","id":"api-reference","level":1},{"text":"Component","id":"component","level":2},{"text":"Component.render(props, state)","id":"componentrenderprops-state","level":3},{"text":"render()","id":"render","level":2},{"text":"hydrate()","id":"hydrate","level":2},{"text":"h() / createElement()","id":"h--createelement","level":2},{"text":"toChildArray","id":"tochildarray","level":2},{"text":"cloneElement","id":"cloneelement","level":2},{"text":"createContext","id":"createcontext","level":2},{"text":"createRef","id":"createref","level":2},{"text":"Fragment","id":"fragment","level":2}]},"html":"<h1>API Reference</h1><p>This page serves as a quick overview over all exported functions.</p>\n<hr>\n<toc></toc><hr>\n\n\t\t\t\t<h2 id=\"component\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#component\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Component (#component)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Component</span>\n\t\t\t\t</h2><p><code>Component</code> is a base class that can be extended to create stateful Preact components.</p>\n<p>Rather than being instantiated directly, Components are managed by the renderer and created as-needed.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// (see below)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h3 id=\"componentrenderprops-state\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#componentrenderprops-state\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Component.render(props, state) (#componentrenderprops-state)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Component.render(props, state)</span>\n\t\t\t\t</h3><p>All components must provide a  <code>render()</code> function. The render function is passed the component&#39;s current props and state, and should return a Virtual DOM Element (typically a JSX &quot;element&quot;), an Array, or <code>null</code>.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// props is the same as this.props</span>\n\t\t<span class=\"token comment\">// state is the same as this.state</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token plain-text\">!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>To learn more about components and how they can be used, check out the <a href=\"/guide/v10/components\">Components Documentation</a>.</p>\n\n\t\t\t\t<h2 id=\"render\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#render\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: render() (#render)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>render()</span>\n\t\t\t\t</h2><p><code>render(virtualDom, containerNode, [replaceNode])</code></p>\n<p>Render a Virtual DOM Element into a parent DOM element <code>containerNode</code>. Does not return anything.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token comment\">// DOM tree before render:</span>\n<span class=\"token comment\">// &lt;div id=\"container\">&lt;/div></span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Foo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Foo</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// After render:</span>\n<span class=\"token comment\">// &lt;div id=\"container\"></span>\n<span class=\"token comment\">//  &lt;div>foo&lt;/div></span>\n<span class=\"token comment\">// &lt;/div></span></code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=Ly8gRE9NIHRyZWUgYmVmb3JlIHJlbmRlcjoKLy8gPGRpdiBpZD0iY29udGFpbmVyIj48L2Rpdj4KCmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ3ByZWFjdCc7Cgpjb25zdCBGb28gPSAoKSA9PiA8ZGl2PmZvbzwvZGl2PjsKCnJlbmRlcig8Rm9vIC8%2BLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJykpOwoKLy8gQWZ0ZXIgcmVuZGVyOgovLyA8ZGl2IGlkPSJjb250YWluZXIiPgovLyAgPGRpdj5mb288L2Rpdj4KLy8gPC9kaXY%2B\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t<p>If the optional <code>replaceNode</code> parameter is provided, it must be a child of <code>containerNode</code>. Instead of inferring where to start rendering, Preact will update or replace the passed element using its diffing algorithm.</p>\n<blockquote>\n<p>⚠️ The <code>replaceNode</code>-argument will be removed with Preact <code>v11</code>. It introduces too many edge cases and bugs which need to be accounted for in the rest of Preact&#39;s source code. We&#39;re leaving this section up for historical reasons, but we don&#39;t recommend anyone to use the third <code>replaceNode</code> argument.</p>\n</blockquote>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token comment\">// DOM tree before render:</span>\n<span class=\"token comment\">// &lt;div id=\"container\"></span>\n<span class=\"token comment\">//   &lt;div>bar&lt;/div></span>\n<span class=\"token comment\">//   &lt;div id=\"target\">foo&lt;/div></span>\n<span class=\"token comment\">// &lt;/div></span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Foo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>target<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">BAR</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Foo</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'target'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// After render:</span>\n<span class=\"token comment\">// &lt;div id=\"container\"></span>\n<span class=\"token comment\">//   &lt;div>bar&lt;/div></span>\n<span class=\"token comment\">//   &lt;div id=\"target\">BAR&lt;/div></span>\n<span class=\"token comment\">// &lt;/div></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>The first argument must be a valid Virtual DOM Element, which represents either a component or an element. When passing a Component, it&#39;s important to let Preact do the instantiation rather than invoking your component directly, which will break in unexpected ways:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// DON'T: Invoking components directly means they won't be counted as a</span>\n<span class=\"token comment\">// VNode and hence not be able to use functionality relating to vnodes.</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ERROR</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ERROR</span>\n\n<span class=\"token comment\">// DO: Passing components using h() or JSX allows Preact to render correctly:</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// success</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> rootElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// success</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h2 id=\"hydrate\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#hydrate\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: hydrate() (#hydrate)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>hydrate()</span>\n\t\t\t\t</h2><p>If you&#39;ve already pre-rendered or server-side-rendered your application to HTML, Preact can bypass most rendering work when loading in the browser. This can be enabled by switching from <code>render()</code> to <code>hydrate()</code>, which skips most diffing while still attaching event listeners and setting up your component tree. This works only when used in conjunction with pre-rendering or <a href=\"/guide/v10/server-side-rendering\">Server-Side Rendering</a>.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> hydrate <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Foo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">hydrate</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Foo</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgaHlkcmF0ZSB9IGZyb20gJ3ByZWFjdCc7Cgpjb25zdCBGb28gPSAoKSA9PiA8ZGl2PmZvbzwvZGl2PjsKaHlkcmF0ZSg8Rm9vIC8%2BLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGFpbmVyJykpOw%3D%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h2 id=\"h--createelement\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#h--createelement\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: h() / createElement() (#h--createelement)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>h() / createElement()</span>\n\t\t\t\t</h2><p><code>h(type, props, ...children)</code></p>\n<p>Returns a Virtual DOM Element with the given <code>props</code>. Virtual DOM Elements are lightweight descriptions of a node in your application&#39;s UI hierarchy, essentially an object of the form <code>{ type, props }</code>.</p>\n<p>After <code>type</code> and <code>props</code>, any remaining parameters are collected into a <code>children</code> property.\nChildren may be any of the following:</p>\n<ul>\n<li>Scalar values (string, number, boolean, null, undefined, etc)</li>\n<li>Nested Virtual DOM Elements</li>\n<li>Infinitely nested Arrays of the above</li>\n</ul>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> h <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// &lt;div id=\"foo\">Hello!&lt;/div></span>\n\n<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Preact!'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// &lt;div id=\"foo\">Hello Preact!&lt;/div></span>\n\n<span class=\"token function\">h</span><span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// &lt;div id=\"foo\">&lt;span>Hello!&lt;/span>&lt;/div></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h2 id=\"tochildarray\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#tochildarray\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: toChildArray (#tochildarray)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>toChildArray</span>\n\t\t\t\t</h2><p>This helper function converts a <code>props.children</code> value to a flattened Array regardless of its structure or nesting. If <code>props.children</code> is already an array, a copy is returned. This function is useful in cases where <code>props.children</code> may not be an array, which can happen with certain combinations of static and dynamic expressions in JSX.</p>\n<p>For Virtual DOM Elements with a single child, <code>props.children</code> is a reference to the child. When there are multiple children, <code>props.children</code> is always an Array. The <code>toChildArray</code> helper provides a way to consistently handle all cases.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> toChildArray <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Foo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">toChildArray</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">I have </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> children</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// props.children is \"bar\"</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Foo</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">bar</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Foo</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  container\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// props.children is [&lt;p>A&lt;/p>, &lt;p>B&lt;/p>]</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Foo</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">A</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">B</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Foo</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  container\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h2 id=\"cloneelement\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#cloneelement\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: cloneElement (#cloneelement)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>cloneElement</span>\n\t\t\t\t</h2><p><code>cloneElement(virtualElement, props, ...children)</code></p>\n<p>This function allows you to create a shallow copy of a Virtual DOM Element.\nIt&#39;s generally used to add or overwrite <code>props</code> of an element:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Linkout</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// add target=\"_blank\" to the link:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">cloneElement</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'_blank'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Linkout</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">home</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Linkout</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// &lt;a href=\"/\" target=\"_blank\">home&lt;/a></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h2 id=\"createcontext\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#createcontext\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: createContext (#createcontext)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>createContext</span>\n\t\t\t\t</h2><p>See the section in the <a href=\"/guide/v10/context#createcontext\">Context documentation</a>.</p>\n\n\t\t\t\t<h2 id=\"createref\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#createref\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: createRef (#createref)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>createRef</span>\n\t\t\t\t</h2><p>Provides a way to reference an element or component once it has been rendered.</p>\n<p>See the <a href=\"/guide/v10/refs#createref\">References documentation</a> for more details.</p>\n\n\t\t\t\t<h2 id=\"fragment\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#fragment\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Fragment (#fragment)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Fragment</span>\n\t\t\t\t</h2><p>A special kind of component that can have children, but is not rendered as a DOM element.\nFragments make it possible to return multiple sibling children without needing to wrap them in a DOM container:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Fragment<span class=\"token punctuation\">,</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'preact'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">A</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">B</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">C</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Fragment</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'container'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Renders:</span>\n<span class=\"token comment\">// &lt;div id=\"container></span>\n<span class=\"token comment\">//   &lt;div>A&lt;/div></span>\n<span class=\"token comment\">//   &lt;div>B&lt;/div></span>\n<span class=\"token comment\">//   &lt;div>C&lt;/div></span>\n<span class=\"token comment\">// &lt;/div></span></code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgRnJhZ21lbnQsIHJlbmRlciB9IGZyb20gJ3ByZWFjdCc7CgpyZW5kZXIoCiAgPEZyYWdtZW50PgogICAgPGRpdj5BPC9kaXY%2BCiAgICA8ZGl2PkI8L2Rpdj4KICAgIDxkaXY%2BQzwvZGl2PgogIDwvRnJhZ21lbnQ%2BLAogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250YWluZXInKQopOwovLyBSZW5kZXJzOgovLyA8ZGl2IGlkPSJjb250YWluZXI%2BCi8vICAgPGRpdj5BPC9kaXY%2BCi8vICAgPGRpdj5CPC9kaXY%2BCi8vICAgPGRpdj5DPC9kaXY%2BCi8vIDwvZGl2Pg%3D%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t"}