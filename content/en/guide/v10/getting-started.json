{"meta":{"title":"Getting Started","description":"How to get started with Preact. We'll learn how to setup the tooling (if any) and get going with writing an application.","toc":[{"text":"Getting Started","id":"getting-started","level":1},{"text":"No build tools route","id":"no-build-tools-route","level":2},{"text":"Alternatives to JSX","id":"alternatives-to-jsx","level":3},{"text":"Create a Vite-Powered Preact App","id":"create-a-vite-powered-preact-app","level":2},{"text":"Getting ready for development","id":"getting-ready-for-development","level":3},{"text":"Start a development server","id":"start-a-development-server","level":1},{"text":"Making a production build","id":"making-a-production-build","level":3},{"text":"Integrating Into An Existing Pipeline","id":"integrating-into-an-existing-pipeline","level":2},{"text":"Setting up JSX","id":"setting-up-jsx","level":3},{"text":"Aliasing React to Preact","id":"aliasing-react-to-preact","level":3},{"text":"Aliasing in Webpack","id":"aliasing-in-webpack","level":4},{"text":"Aliasing in Node","id":"aliasing-in-node","level":4},{"text":"Aliasing in Parcel","id":"aliasing-in-parcel","level":4},{"text":"Aliasing in Rollup","id":"aliasing-in-rollup","level":4},{"text":"Aliasing in Jest","id":"aliasing-in-jest","level":4},{"text":"Aliasing in TypeScript","id":"aliasing-in-typescript","level":4},{"text":"Aliasing with Import Maps","id":"aliasing-with-import-maps","level":4}]},"html":"<h1>Getting Started</h1><p>New to Preact? New to Virtual DOM? Check out the <a href=\"/tutorial\">tutorial</a>.</p>\n<p>This guide helps you get up and running to start developing Preact apps, using 3 popular options.\nIf you&#39;re new to Preact, we recommend starting with <a href=\"#create-a-vite-powered-preact-app\">Vite</a>.</p>\n<hr>\n<toc></toc><hr>\n\n\t\t\t\t<h2 id=\"no-build-tools-route\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#no-build-tools-route\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: No build tools route (#no-build-tools-route)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>No build tools route</span>\n\t\t\t\t</h2><p>Preact is packaged to be used directly in the browser, and doesn&#39;t require any build or tools:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> h<span class=\"token punctuation\">,</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'https://esm.sh/preact'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create your app</span>\n  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p><a href=\"https://glitch.com/~preact-no-build-tools\" target=\"_blank\" rel=\"noopener noreferrer\">ðŸ”¨ Edit on Glitch</a></p>\n<p>The primary drawback of developing this way is the lack of JSX, which requires a build step. An ergonomic and performant alternative to JSX is documented in the next section.</p>\n\n\t\t\t\t<h3 id=\"alternatives-to-jsx\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#alternatives-to-jsx\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Alternatives to JSX (#alternatives-to-jsx)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Alternatives to JSX</span>\n\t\t\t\t</h3><p>Writing raw <code>h</code> or <code>createElement</code> calls can be tedious. JSX has the advantage of looking similar to HTML, which makes it easier to understand for many developers in our experience. JSX requires a build step though, so we highly recommend an alternative called <a href=\"https://github.com/developit/htm\" target=\"_blank\" rel=\"noopener noreferrer\">HTM</a>.</p>\n<p><a href=\"https://github.com/developit/htm\" target=\"_blank\" rel=\"noopener noreferrer\">HTM</a> is a JSX-like syntax that works in standard JavaScript. Instead of requiring a build step, it uses JavaScript&#39;s own <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates\" target=\"_blank\" rel=\"noopener noreferrer\">Tagged Templates</a> syntax, which was added in 2015 and is supported in <a href=\"https://caniuse.com/#feat=template-literals\" target=\"_blank\" rel=\"noopener noreferrer\">all modern browsers</a>. This is an increasingly popular way to write Preact apps, since there are fewer moving parts to understand than a traditional front-end build tooling setup.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>module<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> h<span class=\"token punctuation\">,</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'https://esm.sh/preact'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> htm <span class=\"token keyword\">from</span> <span class=\"token string\">'https://esm.sh/htm'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Initialize htm with Preact</span>\n  <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token function\">htm</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">App</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;h1>Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!&lt;/h1></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>html<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>App<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> name=\"World\" /></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p><a href=\"https://glitch.com/~preact-with-htm\" target=\"_blank\" rel=\"noopener noreferrer\">ðŸ”¨ Edit on Glitch</a></p>\n<blockquote>\n<p><strong>Tip:</strong> HTM also provides a convenient single-import Preact version:</p>\n<p><code>import { html, render } from &#39;https://esm.sh/htm/preact/standalone&#39;</code></p>\n</blockquote>\n<p>For a more scalable solution, see <a href=\"/guide/v10/no-build-workflows#basic-usage\">Import Maps -- Basic Usage</a>, and for more information on HTM, check out its <a href=\"https://github.com/developit/htm\" target=\"_blank\" rel=\"noopener noreferrer\">documentation</a>.</p>\n\n\t\t\t\t<h2 id=\"create-a-vite-powered-preact-app\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#create-a-vite-powered-preact-app\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Create a Vite-Powered Preact App (#create-a-vite-powered-preact-app)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Create a Vite-Powered Preact App</span>\n\t\t\t\t</h2><p><a href=\"https://vitejs.dev\" target=\"_blank\" rel=\"noopener noreferrer\">Vite</a> has become an incredibly popular tool for building applications across many frameworks in the past couple of years, and Preact is no exception. It&#39;s built upon popular tooling like ES modules, Rollup, and ESBuild. Vite, through our initializer or their Preact template, requires no configuration or prior knowledge to get started and this simplicity makes it a very popular way to use Preact.</p>\n<p>To get up and running with Vite quickly, you can use our initializer <code>create-preact</code>. This is an interactive command-line interface (CLI) app that can be run in the terminal on your machine. Using it, you can create a new application by running the following:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-bash\"><span class=\"token function\">npm</span> init preact</code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>This will walk you through creating a new Preact app and gives you some options such as TypeScript, routing (via <code>preact-iso</code>), and ESLint support.</p>\n<blockquote>\n<p><strong>Tip:</strong> None of these decisions need to be final, you can always add or remove them from your project later if you change your mind.</p>\n</blockquote>\n\n\t\t\t\t<h3 id=\"getting-ready-for-development\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#getting-ready-for-development\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Getting ready for development (#getting-ready-for-development)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Getting ready for development</span>\n\t\t\t\t</h3><p>Now we&#39;re ready to start our application. To start a development server, run the following command inside your newly generated project folder:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-bash\"><span class=\"token comment\"># Go into the generated project folder</span>\n<span class=\"token builtin class-name\">cd</span> my-preact-app\n\n<span class=\"token comment\"># Start a development server</span>\n<span class=\"token function\">npm</span> run dev</code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>Once the server has started, it will print a local development URL to open in your browser.\nNow you&#39;re ready to start coding your app!</p>\n\n\t\t\t\t<h3 id=\"making-a-production-build\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#making-a-production-build\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Making a production build (#making-a-production-build)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Making a production build</span>\n\t\t\t\t</h3><p>There comes a time when you need to deploy your app somewhere. Vite ships with a handy <code>build</code> command which will generate a highly-optimized production build.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run build</code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>Upon completion, you&#39;ll have a new <code>dist/</code> folder which can be deployed directly to a server.</p>\n<blockquote>\n<p>For a full list of all available commands and their options, check out the <a href=\"https://vitejs.dev/guide/cli.html\" target=\"_blank\" rel=\"noopener noreferrer\">Vite CLI Documentation</a>.</p>\n</blockquote>\n\n\t\t\t\t<h2 id=\"integrating-into-an-existing-pipeline\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#integrating-into-an-existing-pipeline\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Integrating Into An Existing Pipeline (#integrating-into-an-existing-pipeline)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Integrating Into An Existing Pipeline</span>\n\t\t\t\t</h2><p>If you already have an existing tooling pipeline set up, it&#39;s very likely that this includes a bundler. The most popular choices are <a href=\"https://webpack.js.org/\" target=\"_blank\" rel=\"noopener noreferrer\">webpack</a>, <a href=\"https://rollupjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">rollup</a> or <a href=\"https://parceljs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">parcel</a>. Preact works out of the box with all of them, no major changes needed!</p>\n\n\t\t\t\t<h3 id=\"setting-up-jsx\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#setting-up-jsx\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Setting up JSX (#setting-up-jsx)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Setting up JSX</span>\n\t\t\t\t</h3><p>To transpile JSX, you need a Babel plugin that converts it to valid JavaScript code. The one we all use is <a href=\"https://babeljs.io/docs/en/babel-plugin-transform-react-jsx\" target=\"_blank\" rel=\"noopener noreferrer\">@babel/plugin-transform-react-jsx</a>. Once installed, you need to specify the function for JSX that should be used:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/plugin-transform-react-jsx\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"pragma\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"pragmaFrag\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Fragment\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<blockquote>\n<p><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Babel</a> has some of the best documentation out there. We highly recommend checking it out for questions surrounding Babel and how to set it up.</p>\n</blockquote>\n\n\t\t\t\t<h3 id=\"aliasing-react-to-preact\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-react-to-preact\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing React to Preact (#aliasing-react-to-preact)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing React to Preact</span>\n\t\t\t\t</h3><p>At some point, you&#39;ll probably want to make use of the vast React ecosystem. Libraries and Components originally written for React work seamlessly with our compatibility layer. To make use of it, we need to point all <code>react</code> and <code>react-dom</code> imports to Preact. This step is called <em>aliasing.</em></p>\n<blockquote>\n<p><strong>Note:</strong> If you&#39;re using Vite (via <code>@preact/preset-vite</code>), Preact CLI, or WMR, these aliases are automatically handled for you by default.</p>\n</blockquote>\n\n\t\t\t\t<h4 id=\"aliasing-in-webpack\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-in-webpack\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing in Webpack (#aliasing-in-webpack)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing in Webpack</span>\n\t\t\t\t</h4><p>To alias any package in Webpack, you need to add the <code>resolve.alias</code> section\nto your config. Depending on the configuration you&#39;re using, this section may\nalready be present, but missing the aliases for Preact.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-js\"><span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">//...snip</span>\n  <span class=\"token string-property property\">\"resolve\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"alias\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/compat\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"react-dom/test-utils\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/test-utils\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/compat\"</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">// Must be below test-utils</span>\n      <span class=\"token string-property property\">\"react/jsx-runtime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/jsx-runtime\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h4 id=\"aliasing-in-node\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-in-node\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing in Node (#aliasing-in-node)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing in Node</span>\n\t\t\t\t</h4><p>When running in Node, bundler aliases (Webpack, Rollup, etc.) will not work, as can\nbe seen in NextJS. To fix this, we can use aliases directly in our <code>package.json</code>:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm:@preact/compat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm:@preact/compat\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h4 id=\"aliasing-in-parcel\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-in-parcel\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing in Parcel (#aliasing-in-parcel)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing in Parcel</span>\n\t\t\t\t</h4><p>Parcel uses the standard <code>package.json</code> file to read configuration options under\nan <code>alias</code> key.</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"alias\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/compat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react-dom/test-utils\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/test-utils\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/compat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react/jsx-runtime\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/jsx-runtime\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h4 id=\"aliasing-in-rollup\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-in-rollup\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing in Rollup (#aliasing-in-rollup)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing in Rollup</span>\n\t\t\t\t</h4><p>To alias within Rollup, you&#39;ll need to install <a href=\"https://github.com/rollup/plugins/tree/master/packages/alias\" target=\"_blank\" rel=\"noopener noreferrer\">@rollup/plugin-alias</a>.\nThe plugin will need to be placed before your <a href=\"https://github.com/rollup/plugins/tree/master/packages/node-resolve\" target=\"_blank\" rel=\"noopener noreferrer\">@rollup/plugin-node-resolve</a></p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-js\"><span class=\"token keyword\">import</span> alias <span class=\"token keyword\">from</span> <span class=\"token string\">'@rollup/plugin-alias'</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">alias</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">entries</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">find</span><span class=\"token operator\">:</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">replacement</span><span class=\"token operator\">:</span> <span class=\"token string\">'preact/compat'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">find</span><span class=\"token operator\">:</span> <span class=\"token string\">'react-dom/test-utils'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">replacement</span><span class=\"token operator\">:</span> <span class=\"token string\">'preact/test-utils'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">find</span><span class=\"token operator\">:</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">replacement</span><span class=\"token operator\">:</span> <span class=\"token string\">'preact/compat'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">find</span><span class=\"token operator\">:</span> <span class=\"token string\">'react/jsx-runtime'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">replacement</span><span class=\"token operator\">:</span> <span class=\"token string\">'preact/jsx-runtime'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h4 id=\"aliasing-in-jest\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-in-jest\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing in Jest (#aliasing-in-jest)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing in Jest</span>\n\t\t\t\t</h4><p><a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Jest</a> allows the rewriting of module paths similar to bundlers.\nThese rewrites are configured using regular expressions in your Jest configuration:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"moduleNameMapper\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"^react$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/compat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"^react-dom/test-utils$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/test-utils\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"^react-dom$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/compat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"^react/jsx-runtime$\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preact/jsx-runtime\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<h4 id=\"aliasing-in-typescript\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-in-typescript\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing in TypeScript (#aliasing-in-typescript)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing in TypeScript</span>\n\t\t\t\t</h4><p>TypeScript, even when used alongside a bundler, has its own process of resolving types.\nIn order to ensure Preact&#39;s types are used in place of React&#39;s, you will want to add the\nfollowing configuration to your <code>tsconfig.json</code> (or <code>jsconfig.json</code>):</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"paths\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./node_modules/preact/compat/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"react/jsx-runtime\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./node_modules/preact/jsx-runtime\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./node_modules/preact/compat/\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"react-dom/*\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./node_modules/preact/compat/*\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>Additionally, you may want to enable <code>skipLibCheck</code> as we do in the example above. Some\nReact libraries make use of types that may not be provided by <code>preact/compat</code> (though we do\nour best to fix these), and as such, these libraries could be the source of TypeScript compilation\nerrors. By setting <code>skipLibCheck</code>, you can tell TS that it doesn&#39;t need to do a full check of all\n<code>.d.ts</code> files (usually these are limited to your libraries in <code>node_modules</code>) which will fix these errors.</p>\n\n\t\t\t\t<h4 id=\"aliasing-with-import-maps\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#aliasing-with-import-maps\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Aliasing with Import Maps (#aliasing-with-import-maps)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Aliasing with Import Maps</span>\n\t\t\t\t</h4>\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>importmap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"imports\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"preact\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.23.1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"preact/\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.23.1/\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.23.1/compat\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"react/\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.23.1/compat/\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://esm.sh/preact@10.23.1/compat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>See also <a href=\"/guide/v10/no-build-workflows#recipes-and-common-patterns\">Import Maps -- Recipes and Common Patterns</a> for more examples.</p>\n"}