{"meta":{"title":"References","description":"Refs are a way of creating stable values that are local to a component instance and persist across renders.","toc":[{"text":"References","id":"references","level":1},{"text":"Creating a Ref","id":"creating-a-ref","level":2},{"text":"Using Refs to Access DOM Nodes","id":"using-refs-to-access-dom-nodes","level":2},{"text":"Callback Refs","id":"callback-refs","level":3},{"text":"Using Refs to Store Local Values","id":"using-refs-to-store-local-values","level":2}]},"html":"<h1>References</h1><p>References, or refs for short, are stable, local values that persist across component renders but don&#39;t trigger rerenders like state or props would when they change.</p>\n<p>Most often you&#39;ll see refs used to facilitate imperative manipulation of the DOM but they can be used to store any arbitrary local value that you need to be kept stable. You may use them to track a previous state value, keep a reference to an interval or timeout ID, or simply a counter value. Importantly, refs should not be used for rendering logic, instead, consumed in lifecycle methods and event handlers only.</p>\n<hr>\n<toc></toc><hr>\n\n\t\t\t\t<h2 id=\"creating-a-ref\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#creating-a-ref\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Creating a Ref (#creating-a-ref)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Creating a Ref</span>\n\t\t\t\t</h2><p>There are two ways to create refs in Preact, depending on your preferred component style: <code>createRef</code> (class components) and <code>useRef</code> (function components/hooks). Both APIs fundamentally work the same way: they create a stable, plain object with a <code>current</code> property, optionally initialized to a value.</p>\n<tab-group tabstring=\"Classes, Hooks\">\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"preact\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  countRef <span class=\"token operator\">=</span> <span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  inputRef <span class=\"token operator\">=</span> <span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"preact/hooks\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> countRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> inputRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</tab-group>\n\n\n\t\t\t\t<h2 id=\"using-refs-to-access-dom-nodes\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#using-refs-to-access-dom-nodes\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Using Refs to Access DOM Nodes (#using-refs-to-access-dom-nodes)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Using Refs to Access DOM Nodes</span>\n\t\t\t\t</h2><p>The most common use case for refs is to access the underlying DOM node of a component. This is useful for imperative DOM manipulation, such as measuring elements, calling native methods on various elements (such as <code>.focus()</code> or <code>.play()</code>), and integrating with third-party libraries written in vanilla JS. In the following examples, upon rendering, Preact will assign the DOM node to the <code>current</code> property of the ref object, making it available for use after the component has mounted.</p>\n<tab-group tabstring=\"Classes, Hooks\">\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  ref <span class=\"token operator\">=</span> <span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Logs: [HTMLInputElement]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgcmVuZGVyLCBDb21wb25lbnQsIGNyZWF0ZVJlZiB9IGZyb20gInByZWFjdCI7CgpjbGFzcyBNeUlucHV0IGV4dGVuZHMgQ29tcG9uZW50IHsKICByZWYgPSBjcmVhdGVSZWYobnVsbCk7CgogIGNvbXBvbmVudERpZE1vdW50KCkgewogICAgY29uc29sZS5sb2codGhpcy5yZWYuY3VycmVudCk7CiAgICAvLyBMb2dzOiBbSFRNTElucHV0RWxlbWVudF0KICB9CgogIHJlbmRlcigpIHsKICAgIHJldHVybiA8aW5wdXQgcmVmPXt0aGlzLnJlZn0gLz47CiAgfQp9CgpyZW5kZXIoPE15SW5wdXQgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhcHAiKSk7Cg%3D%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Logs: [HTMLInputElement]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAicHJlYWN0IjsKaW1wb3J0IHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICJwcmVhY3QvaG9va3MiOwoKZnVuY3Rpb24gTXlJbnB1dCgpIHsKICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7CgogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICBjb25zb2xlLmxvZyhyZWYuY3VycmVudCk7CiAgICAvLyBMb2dzOiBbSFRNTElucHV0RWxlbWVudF0KICB9LCBbXSk7CgogIHJldHVybiA8aW5wdXQgcmVmPXtyZWZ9IC8%2BOwp9CgpyZW5kZXIoPE15SW5wdXQgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhcHAiKSk7Cg%3D%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t</tab-group>\n\n\n\t\t\t\t<h3 id=\"callback-refs\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#callback-refs\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Callback Refs (#callback-refs)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Callback Refs</span>\n\t\t\t\t</h3><p>Another way to use references is by passing a function to the <code>ref</code> prop, where the DOM node will be passed as an argument.</p>\n<tab-group tabstring=\"Classes, Hooks\">\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyInput</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dom</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mounted:'</span><span class=\"token punctuation\">,</span> dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// As of Preact 10.23.0, you can optionally return a cleanup function</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unmounted:'</span><span class=\"token punctuation\">,</span> dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgcmVuZGVyLCBDb21wb25lbnQgfSBmcm9tICJwcmVhY3QiOwoKY2xhc3MgTXlJbnB1dCBleHRlbmRzIENvbXBvbmVudCB7CiAgcmVuZGVyKCkgewogICAgcmV0dXJuICgKICAgICAgPGlucHV0IHJlZj17KGRvbSkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCdNb3VudGVkOicsIGRvbSk7CgogICAgICAgIC8vIEFzIG9mIFByZWFjdCAxMC4yMy4wLCB5b3UgY2FuIG9wdGlvbmFsbHkgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvbgogICAgICAgIHJldHVybiAoKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZygnVW5tb3VudGVkOicsIGRvbSk7CiAgICAgICAgfTsKICAgICAgfX0gLz4KICAgICk7CiAgfQp9CgpyZW5kZXIoPE15SW5wdXQgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhcHAiKSk7Cg%3D%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dom</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Mounted:'</span><span class=\"token punctuation\">,</span> dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// As of Preact 10.23.0, you can optionally return a cleanup function</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unmounted:'</span><span class=\"token punctuation\">,</span> dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAicHJlYWN0IjsKCmZ1bmN0aW9uIE15SW5wdXQoKSB7CiAgcmV0dXJuICgKICAgIDxpbnB1dCByZWY9eyhkb20pID0%2BIHsKICAgICAgY29uc29sZS5sb2coJ01vdW50ZWQ6JywgZG9tKTsKCiAgICAgIC8vIEFzIG9mIFByZWFjdCAxMC4yMy4wLCB5b3UgY2FuIG9wdGlvbmFsbHkgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvbgogICAgICByZXR1cm4gKCkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCdVbm1vdW50ZWQ6JywgZG9tKTsKICAgICAgfTsKICAgIH19IC8%2BCiAgKTsKfQoKcmVuZGVyKDxNeUlucHV0IC8%2BLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYXBwIikpOwo%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t</tab-group>\n\n<blockquote>\n<p>If the provided ref callback is unstable (such as one that&#39;s defined inline, as shown above), and <em>does not</em> return a cleanup function, <strong>it will be called twice</strong> upon all rerenders: once with <code>null</code> and then once with the actual reference. This is a common issue and the <code>createRef</code>/<code>useRef</code> APIs make this a little easier by forcing the user to check if <code>ref.current</code> is defined.</p>\n<p>A stable function, for comparison, could be a method on the class component instance, a function defined outside of the component, or a function created with <code>useCallback</code>, for example.</p>\n</blockquote>\n\n\t\t\t\t<h2 id=\"using-refs-to-store-local-values\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#using-refs-to-store-local-values\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Using Refs to Store Local Values (#using-refs-to-store-local-values)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Using Refs to Store Local Values</span>\n\t\t\t\t</h2><p>Refs aren&#39;t limited to storing DOM nodes, however; they can be used to store any type of value that you may need.</p>\n<p>In the following example, we store the ID of an interval in a ref to be able to start &amp; stop it independently.</p>\n<tab-group tabstring=\"Classes, Hooks\">\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SimpleClock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  intervalId <span class=\"token operator\">=</span> <span class=\"token function\">createRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">startClock</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervalId<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">time</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">stopClock</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>intervalId<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> time <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> formattedTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startClock<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Start Clock</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>time</span> <span class=\"token attr-name\">dateTime</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>formattedTime<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>formattedTime<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>time</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stopClock<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Stop Clock</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgcmVuZGVyLCBDb21wb25lbnQsIGNyZWF0ZVJlZiB9IGZyb20gInByZWFjdCI7CgpjbGFzcyBTaW1wbGVDbG9jayBleHRlbmRzIENvbXBvbmVudCB7CiAgc3RhdGUgPSB7CiAgICB0aW1lOiBEYXRlLm5vdygpLAogIH07CiAgaW50ZXJ2YWxJZCA9IGNyZWF0ZVJlZihudWxsKTsKCiAgc3RhcnRDbG9jayA9ICgpID0%2BIHsKICAgIHRoaXMuc2V0U3RhdGUoeyB0aW1lOiBEYXRlLm5vdygpIH0pOwogICAgdGhpcy5pbnRlcnZhbElkLmN1cnJlbnQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgIHRoaXMuc2V0U3RhdGUoeyB0aW1lOiBEYXRlLm5vdygpIH0pOwogICAgfSwgMTAwMCk7CiAgfTsKCiAgc3RvcENsb2NrID0gKCkgPT4gewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsSWQuY3VycmVudCk7CiAgfTsKCgogIHJlbmRlcihfLCB7IHRpbWUgfSkgewogICAgY29uc3QgZm9ybWF0dGVkVGltZSA9IG5ldyBEYXRlKHRpbWUpLnRvTG9jYWxlVGltZVN0cmluZygpOwoKICAgIHJldHVybiAoCiAgICAgIDxkaXY%2BCiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnN0YXJ0Q2xvY2t9PlN0YXJ0IENsb2NrPC9idXR0b24%2BCiAgICAgICAgPHRpbWUgZGF0ZVRpbWU9e2Zvcm1hdHRlZFRpbWV9Pntmb3JtYXR0ZWRUaW1lfTwvdGltZT4KICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuc3RvcENsb2NrfT5TdG9wIENsb2NrPC9idXR0b24%2BCiAgICAgIDwvZGl2PgogICAgKTsKICB9Cn0KCnJlbmRlcig8U2ltcGxlQ2xvY2sgLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJhcHAiKSk7Cg%3D%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">SimpleClock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">,</span> setTime<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> intervalId <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">startClock</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    intervalId<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">stopClock</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>intervalId<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> formattedTime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>startClock<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Start Clock</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>time</span> <span class=\"token attr-name\">dateTime</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>formattedTime<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>formattedTime<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>time</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>stopClock<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Stop Clock</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n\t\t\t\t\t<a class=\"repl-link\" href=\"/repl?code=aW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAicHJlYWN0IjsKaW1wb3J0IHsgdXNlU3RhdGUsIHVzZVJlZiB9IGZyb20gInByZWFjdC9ob29rcyI7CgpmdW5jdGlvbiBTaW1wbGVDbG9jaygpIHsKICBjb25zdCBbdGltZSwgc2V0VGltZV0gPSB1c2VTdGF0ZShEYXRlLm5vdygpKTsKICBjb25zdCBpbnRlcnZhbElkID0gdXNlUmVmKG51bGwpOwoKICBjb25zdCBzdGFydENsb2NrID0gKCkgPT4gewogICAgc2V0VGltZShEYXRlLm5vdygpKTsKICAgIGludGVydmFsSWQuY3VycmVudCA9IHNldEludGVydmFsKCgpID0%2BIHsKICAgICAgc2V0VGltZShEYXRlLm5vdygpKTsKICAgIH0sIDEwMDApOwogIH07CgogIGNvbnN0IHN0b3BDbG9jayA9ICgpID0%2BIHsKICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZC5jdXJyZW50KTsKICB9OwoKICBjb25zdCBmb3JtYXR0ZWRUaW1lID0gbmV3IERhdGUodGltZSkudG9Mb2NhbGVUaW1lU3RyaW5nKCk7CgogIHJldHVybiAoCiAgICA8ZGl2PgogICAgICA8YnV0dG9uIG9uQ2xpY2s9e3N0YXJ0Q2xvY2t9PlN0YXJ0IENsb2NrPC9idXR0b24%2BCiAgICAgIDx0aW1lIGRhdGVUaW1lPXtmb3JtYXR0ZWRUaW1lfT57Zm9ybWF0dGVkVGltZX08L3RpbWU%2BCiAgICAgIDxidXR0b24gb25DbGljaz17c3RvcENsb2NrfT5TdG9wIENsb2NrPC9idXR0b24%2BCiAgICA8L2Rpdj4KICApOwp9CgpyZW5kZXIoPFNpbXBsZUNsb2NrIC8%2BLCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYXBwIikpOwo%3D\">Run in REPL</a>\n\t\t\t\t</div>\n\t\t\t</tab-group>\n"}