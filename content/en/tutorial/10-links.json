{"meta":{"title":"Congratulations!","prev":"/tutorial/09-error-handling","solvable":false,"tutorial":{"initial":"import { render } from 'preact';\nimport { useState, useEffect } from 'preact/hooks'\n\nconst getTodos = async () => {\n  try {\n    return JSON.parse(localStorage.todos)\n  } catch (e) {\n    return [\n      { id: 1, text: 'learn Preact', done: true },\n      { id: 2, text: 'make an awesome app', done: false },\n    ]\n  }\n}\n\nfunction ToDos() {\n  const [todos, setTodos] = useState([])\n\n  useEffect(() => {\n    getTodos().then(todos => {\n      setTodos(todos)\n    })\n  }, [])\n\n  // every time todos changes...\n  useEffect(() => {\n    // ...save the list to localStorage:\n    localStorage.todos = JSON.stringify(todos)\n    // (try reloading the page to see saved todos!)\n  }, [todos])\n\n  function toggle(id) {\n    setTodos(todos => {\n      return todos.map(todo => {\n        // replace the matching todo item with a version where done is toggled\n        if (todo.id === id) {\n          todo = { ...todo, done: !todo.done }\n        }\n        return todo\n      })\n    })\n  }\n\n  function addTodo(e) {\n    e.preventDefault()\n    const form = e.target\n    const text = form.todo.value\n    // pass a callback to the `todos` state setter to update its value in-place:\n    setTodos(todos => {\n      const id = todos.length + 1\n      const newTodo = { id, text, done: false }\n      return todos.concat(newTodo)\n    })\n    form.reset()\n  }\n\n  return (\n    <div>\n      <ul style={{ listStyle: 'none', padding: 0 }}>\n        {todos.map(todo => (\n          <li key={todo.id}>\n            <label style={{ display: 'block' }}>\n              <input type=\"checkbox\" checked={todo.done} onClick={() => toggle(todo.id)} />\n              {' ' + todo.text}\n            </label>\n          </li>\n        ))}\n      </ul>\n      <form onSubmit={addTodo}>\n        <input name=\"todo\" placeholder=\"Add ToDo [enter]\" />\n      </form>\n    </div>\n  )\n}\n\nrender(<ToDos />, document.getElementById(\"app\"));"}},"html":"<h1>Congratulations!</h1><p>You&#39;ve completed the Preact tutorial!</p>\n<p>Feel free to play around a bit more with the demo code.</p>\n\n\t\t\t\t<h3 id=\"next-steps\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#next-steps\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Next Steps (#next-steps)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Next Steps</span>\n\t\t\t\t</h3><ul>\n<li><a href=\"/guide/v10/components\">Learn more about class components</a></li>\n<li><a href=\"/guide/v10/hooks\">Learn more about hooks</a></li>\n<li><a href=\"https://vite.new/preact\" target=\"_blank\" rel=\"noopener noreferrer\">Create your own project</a></li>\n</ul>\n<blockquote>\n<p><strong>We want your feedback!</strong></p>\n<p>Do you feel like you learned Preact? Did you get stuck?</p>\n<p>Feedback is welcome in <a href=\"https://github.com/preactjs/preact-www/discussions/815\" target=\"_blank\" rel=\"noopener noreferrer\">this discussion</a>.</p>\n</blockquote>\n"}