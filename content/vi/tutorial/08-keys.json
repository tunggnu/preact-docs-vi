{"meta":{"title":"Keys (Khóa)","prev":"/tutorial/07-side-effects","next":"/tutorial/09-error-handling","solvable":true,"tutorial":{"setup":"useRealm(function (realm) {\n  // the app element\n  var out = realm.globalThis.document.body.firstElementChild;\n  var options = require('preact').options;\n\n  var oldRender = options.__r;\n  var timer;\n  options.__r = function(vnode) {\n    timer = setTimeout(check, 10);\n    if (oldRender) oldRender(vnode);\n  };\n\n  function check() {\n    timer = null;\n    var c = out.firstElementChild.children;\n    if (\n      c.length === 2 &&\n      /learn preact/i.test(c[0].textContent) &&\n      /make an awesome app/i.test(c[1].textContent)\n    ) {\n      solutionCtx.setSolved(true);\n    }\n  }\n\n  return () => {\n    options.__r = oldRender;\n  };\n});","initial":"import { render } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\n\nconst wait = ms => new Promise(r => setTimeout(r, ms))\n\nconst getTodos = async () => {\n  await wait(500);\n  return [\n    { id: 1, text: 'learn Preact', done: false },\n    { id: 2, text: 'make an awesome app', done: false },\n  ]\n}\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([])\n\n  return (\n    <ul>\n    </ul>\n  )\n}\n\nrender(<TodoList />, document.getElementById(\"app\"));","final":"import { render } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\n\nconst wait = ms => new Promise(r => setTimeout(r, ms))\n\nconst getTodos = async () => {\n  await wait(500);\n  return [\n    { id: 1, text: 'learn Preact', done: false },\n    { id: 2, text: 'make an awesome app', done: false },\n  ]\n}\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([])\n\n  useEffect(() => {\n    getTodos().then(todos => {\n      setTodos(todos)\n    })\n  }, [])\n\n  return (\n    <ul>\n      {todos.map(todo => (\n        <li key={todo.id}>\n          {todo.text}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nrender(<TodoList />, document.getElementById(\"app\"));"}},"html":"<h1>Keys (Khóa)</h1><p>Ở chương đầu tiên, chúng ta đã thấy cách Preact sử dụng Virtual DOM để tính toán những gì đã thay đổi giữa hai cây được mô tả bởi JSX của chúng ta, sau đó áp dụng các thay đổi đó lên HTML DOM để cập nhật trang. Điều này hoạt động tốt trong hầu hết các trường hợp, nhưng đôi khi yêu cầu Preact phải &quot;đoán&quot; hình dạng của cây đã thay đổi như thế nào giữa hai lần render.</p>\n<p>Tình huống phổ biến nhất mà dự đoán của Preact có thể khác với ý định của chúng ta là khi so sánh các danh sách. Hãy xem xét một component danh sách việc cần làm đơn giản:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'wake up'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'make bed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">wakeUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'make bed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>wakeUp<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>Lần đầu tiên component này được render, hai phần tử <code>&lt;li&gt;</code> sẽ được vẽ ra. Sau khi nhấn nút <strong>&quot;Tôi đã thức dậy!&quot;</strong>, mảng state <code>todos</code> của chúng ta được cập nhật chỉ còn mục thứ hai, <code>&quot;make bed&quot;</code>.</p>\n<p>Đây là những gì Preact &quot;thấy&quot; ở lần render đầu tiên và lần render thứ hai:</p>\n<table><thead><tr>\n  <th>Lần render đầu tiên</th>\n  <th>Lần render thứ hai</th>\n</tr></thead><tbody><tr><td>\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">wake up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">make bed</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</td><td>\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">make bed</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</td></tr></tbody></table>\n\n<p>Bạn có nhận ra vấn đề không? Mặc dù với chúng ta thì rõ ràng phần tử danh sách đầu tiên (&quot;wake up&quot;) đã bị xóa, nhưng Preact không biết điều đó. Tất cả những gì Preact thấy là trước đó có hai mục, bây giờ chỉ còn một. Khi áp dụng cập nhật này, thực tế nó sẽ xóa mục thứ hai (<code>&lt;li&gt;make bed&lt;/li&gt;</code>), sau đó cập nhật văn bản của mục đầu tiên từ <code>wake up</code> thành <code>make bed</code>.</p>\n<p>Kết quả về mặt kỹ thuật là đúng – chỉ còn một mục với nội dung &quot;make bed&quot; – nhưng cách mà chúng ta đạt được kết quả đó là không tối ưu. Hãy tưởng tượng nếu có 1000 mục trong danh sách và chúng ta xóa mục đầu tiên: thay vì chỉ xóa một <code>&lt;li&gt;</code>, Preact sẽ cập nhật văn bản của 999 mục còn lại và xóa mục cuối cùng.</p>\n\n\t\t\t\t<h2 id=\"__key__-cho-việc-render-danh-sách\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#__key__-cho-việc-render-danh-sách\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: __key__ cho việc render danh sách (#__key__-cho-việc-render-danh-sách)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>__key__ cho việc render danh sách</span>\n\t\t\t\t</h2><p>Trong các tình huống như ví dụ trên, các mục đang thay đổi <em>thứ tự</em>. Chúng ta cần một cách để giúp Preact biết mục nào là mục nào, để nó có thể phát hiện khi nào mỗi mục được thêm, xóa hoặc thay thế. Để làm điều này, chúng ta có thể thêm prop <code>key</code> cho mỗi mục.</p>\n<p>Prop <code>key</code> là một định danh cho một phần tử nhất định. Thay vì so sánh <em>thứ tự</em> các phần tử giữa hai cây, các phần tử có prop <code>key</code> sẽ được so sánh bằng cách tìm phần tử trước đó có cùng giá trị prop <code>key</code>. Một <code>key</code> có thể là bất kỳ kiểu giá trị nào, miễn là nó &quot;ổn định&quot; giữa các lần render: các lần render lặp lại của cùng một mục phải có giá trị prop <code>key</code> giống hệt nhau.</p>\n<p>Hãy thêm key vào ví dụ trước. Vì danh sách việc cần làm của chúng ta là một mảng các chuỗi đơn giản không thay đổi, chúng ta có thể dùng chính các chuỗi đó làm key:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">TodoList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>todos<span class=\"token punctuation\">,</span> setTodos<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'wake up'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'make bed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">wakeUp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTodos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'make bed'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token comment\">//  ^^^^^^^^^^ thêm prop key</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>wakeUp<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>Lần đầu tiên chúng ta render phiên bản mới của component <code>&lt;TodoList&gt;</code>, hai mục <code>&lt;li&gt;</code> sẽ được vẽ ra. Khi nhấn nút &quot;Tôi đã thức dậy!&quot;, mảng state <code>todos</code> của chúng ta được cập nhật chỉ còn mục thứ hai, <code>&quot;make bed&quot;</code>.</p>\n<p>Đây là những gì Preact thấy bây giờ khi chúng ta đã thêm <code>key</code> cho các mục danh sách:</p>\n<table><thead><tr>\n  <th>Lần render đầu tiên</th>\n  <th>Lần render thứ hai</th>\n</tr></thead><tbody><tr><td>\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wake up<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">wake up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>make bed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">make bed</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</td><td>\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>make bed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">make bed</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</td></tr></tbody></table>\n\n<p>Lần này, Preact có thể thấy rằng mục đầu tiên đã bị xóa, vì cây thứ hai không còn mục nào với <code>key=&quot;wake up&quot;</code>. Nó sẽ xóa mục đầu tiên, và giữ nguyên mục thứ hai.</p>\n\n\t\t\t\t<h2 id=\"khi-__không-nên__-dùng-key\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#khi-__không-nên__-dùng-key\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Khi __không nên__ dùng key (#khi-__không-nên__-dùng-key)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Khi __không nên__ dùng key</span>\n\t\t\t\t</h2><p>Một trong những lỗi phổ biến nhất mà lập trình viên gặp phải với key là vô tình chọn key <em>không ổn định</em> giữa các lần render. Trong ví dụ của chúng ta, hãy tưởng tượng nếu chúng ta dùng đối số index từ <code>map()</code> làm giá trị <code>key</code> thay vì chuỗi <code>item</code>:</p>\n<p><code>items.map((item, index) =&gt; &lt;li key={index}&gt;{item}&lt;/li&gt;</code></p>\n<p>Điều này sẽ khiến Preact thấy các cây sau ở lần render đầu tiên và lần render thứ hai:</p>\n<table><thead><tr>\n  <th>Lần render đầu tiên</th>\n  <th>Lần render thứ hai</th>\n</tr></thead><tbody><tr><td>\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">wake up</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">make bed</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</td><td>\n\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">make bed</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Tôi đã thức dậy!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</td></tr></tbody></table>\n\n<p>Vấn đề là <code>index</code> thực ra không xác định một <em><strong>giá trị</strong></em> trong danh sách của chúng ta, nó xác định một <em><strong>vị trí</strong></em>. Render như vậy thực ra <em>bắt buộc</em> Preact phải khớp các mục theo thứ tự, giống như nó sẽ làm nếu không có key nào. Việc dùng index làm key thậm chí có thể gây ra kết quả tốn kém hoặc sai khi áp dụng cho các mục danh sách có kiểu khác nhau, vì key không thể khớp các phần tử có kiểu khác nhau.</p>\n<blockquote>\n<p>🚙 <strong>Ví dụ minh họa!</strong> Hãy tưởng tượng bạn gửi xe ở bãi đỗ xe có nhân viên trông xe.</p>\n<p>Khi bạn quay lại lấy xe, bạn nói với nhân viên rằng bạn lái một chiếc SUV màu xám. Thật không may, hơn một nửa số xe ở bãi là SUV màu xám, và bạn nhận nhầm xe của người khác. Chủ xe SUV màu xám tiếp theo cũng nhận nhầm xe, và cứ thế tiếp tục.</p>\n<p>Nếu thay vào đó bạn nói với nhân viên rằng bạn lái chiếc SUV màu xám với biển số &quot;PR3ACT&quot;, bạn chắc chắn sẽ nhận lại đúng xe của mình.</p>\n</blockquote>\n\n\n<p>Nguyên tắc chung là không bao giờ dùng index của mảng hoặc vòng lặp làm <code>key</code>. Hãy dùng chính giá trị của mục trong danh sách, hoặc tạo một ID duy nhất cho từng mục và dùng nó:</p>\n\n\t\t\t\t<div class=\"highlight-container\">\n\t\t\t\t\t<pre class=\"highlight\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'wake up'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">text</span><span class=\"token operator\">:</span> <span class=\"token string\">'make bed'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ToDos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>todo<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<p>Hãy nhớ: nếu bạn thực sự không thể tìm được một key ổn định, tốt hơn là bỏ qua prop <code>key</code> hoàn toàn thay vì dùng index làm key.</p>\n\n\t\t\t\t<h2 id=\"thực-hành\">\n\t\t\t\t\t<a class=\"fragment-link\" href=\"#thực-hành\">\n\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" aria-label=\"Link to: Thực hành! (#thực-hành)\">\n\t\t\t\t\t\t\t<use href=\"/icons.svg#link\" ></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span>Thực hành!</span>\n\t\t\t\t</h2><p>Ở bài tập chương này, chúng ta sẽ kết hợp những gì đã học về key với kiến thức về tác động phụ từ chương trước.</p>\n<p>Hãy dùng một effect để gọi hàm <code>getTodos()</code> đã cho sau khi <code>&lt;TodoList&gt;</code> được render lần đầu. Lưu ý rằng hàm này trả về một Promise, bạn có thể lấy giá trị bằng cách gọi <code>.then(value =&gt; { })</code>. Khi đã có giá trị Promise, hãy lưu nó vào hook useState <code>todos</code> bằng cách gọi phương thức <code>setTodos</code> liên quan.</p>\n<p>Cuối cùng, cập nhật JSX để render từng mục từ <code>todos</code> thành một <code>&lt;li&gt;</code> chứa giá trị thuộc tính <code>.text</code> của mục todo đó.</p>\n<solution>\n  <h4>🎉 Chúc mừng!</h4>\n  <p>\n    Bạn đã hoàn thành chương áp chót,\n    và đã học cách render danh sách một cách hiệu quả.\n  </p>\n</solution>\n\n\n\n\n\n\n"}